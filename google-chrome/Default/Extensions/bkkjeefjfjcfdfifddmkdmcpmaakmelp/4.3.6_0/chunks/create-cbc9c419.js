import { i as i$1, t, r as r$1 } from './transframe-provider-e657167f.js';
import { r as r$2 } from './browser-polyfill-1756fcfb.js';

function i(n){return new i$1(new class{constructor(s){t(this,"_isConnected",!1),t(this,"_messageHandler",(()=>{})),t(this,"_port"),t(this,"_options"),t(this,"_messageHandlerWrapper",(e=>{this._messageHandler(e);})),this._options=s;}get isConnected(){return this._isConnected}connect(){const e=()=>{this._port=r$2.runtime.connect({name:this._options?.channelName??"transframe"}),this._port.onMessage.addListener(this._messageHandlerWrapper),this._isConnected=!0;},s=window.document;s.prerendering?s.addEventListener("prerenderingchange",(()=>{s.prerendering||e();})):e();}disconnect(){this._port?.onMessage.removeListener(this._messageHandlerWrapper),this._port?.disconnect(),this._isConnected=!1;}sendMessage(e){this._port?.postMessage(e);}onMessage(e){this._messageHandler=e;}}(n),n)}function r(s){return new r$1(new class{constructor(){t(this,"_isListening",!1),t(this,"_messageHandler",(()=>{})),t(this,"_messageHandlerWrapper",((e,s)=>{let n=!0;e.onDisconnect.addListener((()=>{n=!1;}));const t={fromId:void 0,port:e};this._messageHandler(s,(s=>{n&&e.postMessage(s);}),t);})),t(this,"_connectionListener",(e=>{e.onMessage.addListener((s=>{this._messageHandlerWrapper(e,s);}));}));}get isListening(){return this._isListening}listen(){r$2.runtime.onConnect.addListener(this._connectionListener),this._isListening=!0;}close(){r$2.runtime.onConnect.removeListener(this._connectionListener),this._isListening=!1;}onMessage(e){this._messageHandler=e;}registerFrame(e,s){throw new Error("Method not implemented.")}},s)}

export { i, r };
