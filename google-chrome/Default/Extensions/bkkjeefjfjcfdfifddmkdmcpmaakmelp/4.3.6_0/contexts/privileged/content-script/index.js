import '../../../chunks/browser-polyfill-1756fcfb.js';
import { o as o$1 } from '../../../chunks/index-fe22708a.js';
import { i as i$1 } from '../../../chunks/create-cbc9c419.js';
import { n as n$1 } from '../../../chunks/util-dbc6d9af.js';
import { n } from '../../../chunks/create-5399fd46.js';
import '../../../chunks/transframe-provider-e657167f.js';

const s=i$1({namespace:"truffle-background-privileged-api-v1",connectImmediately:!1});s.connect().catch((e=>{console.warn("failed to connect to transframe",e);}));const c=s.api;async function r(e,n,a,{throwIfErrors:t,headers:s}={}){null!=s||(s=new Headers),s.append("Content-Type","application/json");const c=await fetch(e,{method:"POST",headers:s,body:JSON.stringify({query:n,variables:a})}),r=await c.json();if(t&&(null==r?void 0:r.errors))throw new Error(`graphql error ${r.errors}`);return r.data}async function o(){let n=await o$1.auth.get("savedAnonAccessToken");return n||(n=await async function(){var e;const n=await r("https://mycelium.truffle.vip/graphql","\n    mutation UserAnonCreate {\n      userLoginAnon {\n        accessToken\n      }\n    }\n  ",{});return null===(e=null==n?void 0:n.userLoginAnon)||void 0===e?void 0:e.accessToken}(),await o$1.auth.set("savedAnonAccessToken",n)),n}function i(e){const[,n]=e.split(".");return JSON.parse(atob(n))}async function u(){let n=await o$1.auth.get("accessToken");return n||(n=await o()),n}async function l(e){return (await async function(e,n,{authMethod:a,throwIfErrors:t}={authMethod:p.TRUFFLE_API_KEY}){const s="https://mycelium.truffle.vip/graphql",c=new Headers;if(a===p.USER_GLOBAL_ACCESS_TOKEN){const e=await u();c.append("x-access-token",e);}else a===p.TRUFFLE_API_KEY&&c.append("Authorization","Bearer pk_U1x92ZrrdQoflf2JycecdmnilAGRAkmUNBpxPnVPDdeUKcsH");return r(s,e,n,{headers:c,throwIfErrors:t})}("\n      query ExtensionFetchPackageToken($packageInstallId: ID!) {\n        packageInstallUserAccessToken(input: {\n            packageInstallId: $packageInstallId\n        })\n      }\n    ",{packageInstallId:e},{authMethod:p.USER_GLOBAL_ACCESS_TOKEN})).packageInstallUserAccessToken}var p;!function(e){e.USER_GLOBAL_ACCESS_TOKEN="USER_GLOBAL_ACCESS_TOKEN",e.TRUFFLE_API_KEY="TRUFFLE_API_KEY",e.NONE="NONE";}(p||(p={}));n({api:{fetchWithRulesApplied:async(e,n,a,{headersToRemove:t}={})=>c.fetchWithRulesApplied(n,a,{headersToRemove:t}),getGlobalUserAccessToken:async()=>await u(),setGlobalUserAccessToken:async(n,a)=>{await async function(n){var a;const t=i(await o()),s=null!==(a=n&&i(n))&&void 0!==a?a:{};t.userId!==s.userId||s.isAnon?await o$1.auth.set("packageInstallAccessTokens",{}):await o$1.auth.set("savedAnonAccessToken",void 0),await o$1.auth.set("accessToken",n);}(a);},onGlobalUserAccessTokenChanged:(n,a)=>{let t;o$1.auth.subscribe((async()=>{const e=await u();e!==t&&(a(e),t=e);}));},getPackageInstallUserAccessToken:async(n,a)=>await async function(n){const a=await o$1.auth.get("packageInstallAccessTokens");let t=a[n];return t||(t=await l(n),a[n]=t,await o$1.auth.set("packageInstallAccessTokens",a)),t}(a),storageBucketSubscribe:async(n,a,t)=>{const s=o$1[a];if(!s)throw new Error(`Unknown bucket: ${a}`);s.subscribe(t);},storageBucketGet:async(n,a,t)=>{const s=o$1[a];if(!s)throw new Error(`Unknown bucket: ${a}`);return await s.get(t)},storageBucketSet:async(n,a,t,s)=>{const c=o$1[a];if(!c)throw new Error(`Unknown bucket: ${a}`);return c.set(t,s)}},namespace:"truffle-privileged-api-v1",strictMode:!0}).registerFrame(n$1(window));
